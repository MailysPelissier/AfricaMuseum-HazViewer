Installer le fichier d'installation Geoserver : https://geoserver.org/

Avoir un environnement Java 11 ou 17 : https://adoptium.net/

Mettre le chemin de cet environnement lors du setup ex : C:\Program Files\Eclipse Adoptium\jre-11.0.26.4-hotspot

Il faut également autoriser l’accès à votre serveur (Jetty) depuis un client avec les CORS :
https://docs.geoserver.org/latest/en/user/production/container.html#enable-cors-for-jetty-binary-installer

Username : admin
Password : geoserver
Port : 8080

Geoserver v2.27.1

Créer d’abord un nouveau Workspace (webGIS)
Créer un Store, lié à votre base PostGIS (webGIS)
Créer les layers (la géométrie est utilisée automatiquement) (events)
Layer : 
Declared SRS: EPSG:4326
Bounding Boxes : cliquer sur Compute from SRS bounds puis sur Compute from native bounds
Vérifier que ça fonctionne avec le layer preview

GeoServer permet de créer des couches virtuelles (virtual tables) avec des paramètres dynamiques (si PostGIS en back-end).
%event_id% est un paramètre dans la couche virtuelle. Cela permet des appels comme :
.../wfs?typename=my_layer&viewparams=event_id:1
Cela permet d'éviter une répétition des mêmes paragraphs si un même paragraph est lié à plusieurs event_id.
Les Virtual Tables sont des couches basées sur des requêtes SQL paramétrées (via viewparams). Cette méthode : évite les redondances, n’extrait que les données nécessaires, est beaucoup plus légère et rapide et est scalable même avec beaucoup d’événements et de paragraphes
Cela retourne uniquement les paragraphs liés à l’event_id 1, sans surcharge mémoire ni duplication excessive.
Utiliser des virtual tables (vues SQL) dans GeoServer
GeoServer permet de créer une couche basée sur une vue SQL avec jointure dans le fichier virtual table. Tu définis toi-même une jointure SQL entre tables.
Ensuite tu publies cette requête comme une nouvelle couche dans GeoServer (via featuretype -> SQL view), et tu peux interroger cette couche directement comme une couche GeoServer classique.

Créer une virtual table pour accéder aux paragraphs à partir de l'event_id auxquels ils sont liés (vue_paragraphs):
Dans New layer, choisir le store webGIS
Cliquer sur Configure new SQL view
SQL statement : 
SELECT (p.paragraph_id || '_' || ep.event_id) AS composite_id, p.*
FROM paragraphs p
JOIN event_paragraphs ep ON p.paragraph_id = ep.paragraph_id
WHERE ep.event_id = '%event_id%'
SQL view parameters :
Cliquer sur Guess parameters from SQL
Paramètre: Name: event_id Default value:19530131E0CT20250417122827 Validation: ^[\w\d\s]+$
Attributes : 
Cliquer sur Refresh
Sélectionner composite_id pour être l'identifier (clé primaire)
Refaire les bbox à la main : -180 -90 180 90